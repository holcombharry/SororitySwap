// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchPageWithList matches snapshot 1`] = `
<Page
  description="SearchPage.schemaDescription"
  schema={
    Object {
      "@context": "http://schema.org",
      "@type": "SearchResultsPage",
      "description": "SearchPage.schemaDescription",
      "mainEntity": Array [
        "{\\"@type\\":\\"ItemList\\",\\"name\\":\\"SearchPage.schemaForSearch\\",\\"itemListOrder\\":\\"http://schema.org/ItemListOrderAscending\\",\\"itemListElement\\":[]}",
      ],
      "name": "SearchPage.schemaTitle",
    }
  }
  scrollingDisabled={false}
  title="SearchPage.schemaTitle"
>
  <withRouter(Connect(TopbarContainerComponent))
    className="topbar"
    currentPage="SearchPage"
    currentSearchParams={Object {}}
  />
  <div
    className="layoutWrapperContainer"
  >
    <aside
      className="layoutWrapperFilterColumn"
    >
      <div
        className="filterColumnContent"
      >
        <FilterComponent
          className="filter"
          filterConfig={
            Object {
              "config": Object {
                "options": Array [
                  Object {
                    "key": "hatsAndHeadwear",
                    "label": "Hats & Headwear",
                  },
                  Object {
                    "key": "jacketsAndSportswear",
                    "label": "Jackets & Sportswear",
                  },
                  Object {
                    "key": "shirts",
                    "label": "Shirts",
                  },
                  Object {
                    "key": "sweatsAndCasual",
                    "label": "Sweats & Casual",
                  },
                  Object {
                    "key": "sweatshirts",
                    "label": "Sweatshirts",
                  },
                  Object {
                    "key": "accessories",
                    "label": "Accessories",
                  },
                ],
                "schemaType": "enum",
              },
              "group": "primary",
              "id": "category",
              "label": "Category",
              "queryParamNames": Array [
                "pub_category",
              ],
              "type": "SelectMultipleFilter",
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          isDesktop={true}
          key="SearchFiltersMobile.category"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />
        <FilterComponent
          className="filter"
          filterConfig={
            Object {
              "config": Object {
                "options": Array [
                  Object {
                    "key": "true",
                    "label": "True",
                  },
                  Object {
                    "key": "false",
                    "label": "False",
                  },
                ],
                "schemaType": "enum",
              },
              "group": "primary",
              "id": "madetoorder",
              "label": "Made to Order",
              "queryParamNames": Array [
                "pub_madetoorder",
              ],
              "type": "SelectMultipleFilter",
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          isDesktop={true}
          key="SearchFiltersMobile.madetoorder"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />
        <FilterComponent
          className="filter"
          filterConfig={
            Object {
              "config": Object {
                "options": Array [
                  Object {
                    "key": "extraSmall",
                    "label": "XS",
                  },
                  Object {
                    "key": "small",
                    "label": "S",
                  },
                  Object {
                    "key": "medium",
                    "label": "M",
                  },
                  Object {
                    "key": "large",
                    "label": "L",
                  },
                  Object {
                    "key": "extraLarge",
                    "label": "XL",
                  },
                  Object {
                    "key": "doubleExtraLarge",
                    "label": "XXL",
                  },
                  Object {
                    "key": "oneSize",
                    "label": "One size",
                  },
                ],
                "schemaType": "enum",
              },
              "group": "primary",
              "id": "size",
              "label": "Size",
              "queryParamNames": Array [
                "pub_size",
              ],
              "type": "SelectMultipleFilter",
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          isDesktop={true}
          key="SearchFiltersMobile.size"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />
        <FilterComponent
          className="filter"
          filterConfig={
            Object {
              "config": Object {
                "options": Array [
                  Object {
                    "key": "black",
                    "label": "Black",
                  },
                  Object {
                    "key": "blue",
                    "label": "Blue",
                  },
                  Object {
                    "key": "brown",
                    "label": "Brown",
                  },
                  Object {
                    "key": "clear",
                    "label": "Clear",
                  },
                  Object {
                    "key": "gold",
                    "label": "Gold",
                  },
                  Object {
                    "key": "gray",
                    "label": "Gray",
                  },
                  Object {
                    "key": "green",
                    "label": "Green",
                  },
                  Object {
                    "key": "orange",
                    "label": "Orange",
                  },
                  Object {
                    "key": "pink",
                    "label": "Pink",
                  },
                  Object {
                    "key": "purple",
                    "label": "Purple",
                  },
                  Object {
                    "key": "rainbow",
                    "label": "Rainbow",
                  },
                  Object {
                    "key": "red",
                    "label": "Red",
                  },
                  Object {
                    "key": "silver",
                    "label": "Silver",
                  },
                  Object {
                    "key": "tan",
                    "label": "Tan",
                  },
                  Object {
                    "key": "white",
                    "label": "White",
                  },
                  Object {
                    "key": "yellow",
                    "label": "Yellow",
                  },
                ],
                "schemaType": "enum",
              },
              "group": "primary",
              "id": "color",
              "label": "Color",
              "queryParamNames": Array [
                "pub_color",
              ],
              "type": "SelectMultipleFilter",
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          isDesktop={true}
          key="SearchFiltersMobile.color"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />
        <FilterComponent
          className="filter"
          filterConfig={
            Object {
              "config": Object {
                "options": Array [
                  Object {
                    "key": "new",
                    "label": "New",
                  },
                  Object {
                    "key": "good",
                    "label": "Good",
                  },
                  Object {
                    "key": "fair",
                    "label": "Fair",
                  },
                ],
                "schemaType": "enum",
              },
              "group": "primary",
              "id": "condition",
              "label": "Condition",
              "queryParamNames": Array [
                "pub_condition",
              ],
              "type": "SelectMultipleFilter",
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          isDesktop={true}
          key="SearchFiltersMobile.condition"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />
        <FilterComponent
          className="filter"
          filterConfig={
            Object {
              "config": Object {
                "options": Array [
                  Object {
                    "key": "alphaChiOmega",
                    "label": "Alpha Chi Omega",
                  },
                  Object {
                    "key": "alphaDeltaPi",
                    "label": "Alpha Delta Pi",
                  },
                  Object {
                    "key": "alphaEpsilonPhi",
                    "label": "Alpha Epsilon Phi",
                  },
                  Object {
                    "key": "alphaGammaDelta",
                    "label": "Alpha Gamma Delta",
                  },
                  Object {
                    "key": "alphaOmicronPi",
                    "label": "Alpha Omicron Pi",
                  },
                  Object {
                    "key": "alphaPhi",
                    "label": "Alpha Phi",
                  },
                  Object {
                    "key": "alphaSigmaAlpha",
                    "label": "Alpha Sigma Alpha",
                  },
                  Object {
                    "key": "alphaSigmaTau",
                    "label": "Alpha Sigma Tau",
                  },
                  Object {
                    "key": "alphaXiDelta",
                    "label": "Alpha Xi Delta",
                  },
                  Object {
                    "key": "chiOmega",
                    "label": "Chi Omega",
                  },
                  Object {
                    "key": "deltaDeltaDelta",
                    "label": "Delta Delta Delta",
                  },
                  Object {
                    "key": "deltaGamma",
                    "label": "Delta Gamma",
                  },
                  Object {
                    "key": "deltaPhiEpsilon",
                    "label": "Delta Phi Epsilon",
                  },
                  Object {
                    "key": "deltaZeta",
                    "label": "Delta Zeta",
                  },
                  Object {
                    "key": "gammaPhiBeta",
                    "label": "Gamma Phi Beta",
                  },
                  Object {
                    "key": "kappaAlphaTheta",
                    "label": "Kappa Alpha Theta",
                  },
                  Object {
                    "key": "kappaDelta",
                    "label": "Kappa Delta",
                  },
                  Object {
                    "key": "kappaKappaGamma",
                    "label": "Kappa Kappa Gamma",
                  },
                  Object {
                    "key": "phiMu",
                    "label": "Phi Mu",
                  },
                  Object {
                    "key": "phiSigmaSigma",
                    "label": "Phi Sigma Sigma",
                  },
                  Object {
                    "key": "piBetaPhi",
                    "label": "Pi Beta Phi",
                  },
                  Object {
                    "key": "rhoGamma",
                    "label": "Rho Gamma",
                  },
                  Object {
                    "key": "sigmaDeltaTau",
                    "label": "Sigma Delta Tau",
                  },
                  Object {
                    "key": "sigmaKappa",
                    "label": "Sigma Kappa",
                  },
                  Object {
                    "key": "sigmaSigmaSigma",
                    "label": "Sigma Sigma Sigma",
                  },
                  Object {
                    "key": "thetaPhiAlpha",
                    "label": "Theta Phi Alpha",
                  },
                  Object {
                    "key": "zetaTauAlpha",
                    "label": "Zeta Tau Alpha",
                  },
                  Object {
                    "key": "notAssociated",
                    "label": "Not Associated",
                  },
                ],
                "schemaType": "enum",
              },
              "group": "primary",
              "id": "sorority",
              "label": "Sorority",
              "queryParamNames": Array [
                "pub_sorority",
              ],
              "type": "SelectSingleFilter",
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          isDesktop={true}
          key="SearchFiltersMobile.sorority"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />
        <FilterComponent
          className="filter"
          filterConfig={
            Object {
              "config": Object {
                "options": Array [
                  Object {
                    "key": "true",
                    "label": "True",
                  },
                  Object {
                    "key": "false",
                    "label": "False",
                  },
                ],
                "schemaType": "enum",
              },
              "group": "primary",
              "id": "blah",
              "label": "Made to Order",
              "queryParamNames": Array [
                "pub_blah",
              ],
              "type": "SelectMultipleFilter",
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          isDesktop={true}
          key="SearchFiltersMobile.blah"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />

        <FilterComponent
          className="filter"
          filterConfig={
            Object {
              "config": Object {
                "options": Array [
                  Object {
                    "key": "true",
                    "label": "True",
                  },
                  Object {
                    "key": "false",
                    "label": "False",
                  },
                ],
                "schemaType": "enum",
              },
              "group": "primary",
              "id": "blah",
              "label": "Made to Order",
              "queryParamNames": Array [
                "pub_blah",
              ],
              "type": "SelectMultipleFilter",
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          isDesktop={true}
          key="SearchFiltersMobile.blah"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />

        <FilterComponent
          className="filter"
          filterConfig={
            Object {
              "config": Object {
                "max": 1000,
                "min": 0,
                "step": 5,
              },
              "group": "primary",
              "id": "price",
              "label": "Price",
              "queryParamNames": Array [
                "price",
              ],
              "type": "PriceFilter",
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          isDesktop={true}
          key="SearchFiltersMobile.price"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />
        <button
          className="resetAllButton"
          onClick={[Function]}
        >
          <MemoizedFormattedMessage
            id="SearchFiltersMobile.resetAll"
          />
        </button>
      </div>
    </aside>
    <div
      className="layoutWrapperMain"
      role="main"
    >
      <div
        className="searchResultContainer"
      >
        <injectIntl(withRouter(SearchFiltersMobileComponent))
          className="searchFiltersMobileList"
          isMapVariant={false}
          listingsAreLoaded={true}
          noResultsInfo={null}
          onCloseModal={[Function]}
          onManageDisableScrolling={[Function]}
          onMapIconClick={[Function]}
          onOpenModal={[Function]}
          resetAll={[Function]}
          resultsCount={22}
          searchInProgress={false}
          searchListingsError={null}
          selectedFiltersCount={0}
          showAsModalMaxWidth={768}
          sortByComponent={
            <injectIntl(SortBy)
              contentPlacementOffset={-14}
              hasConflictingFilters={false}
              isConflictingFilterActive={false}
              menuLabelRootClassName="sortByMenuLabel"
              onSelect={[Function]}
              rootClassName="sortBy"
              selectedFilters={Object {}}
              showAsPopup={true}
            />
          }
          urlQueryParams={Object {}}
        >
          <FilterComponent
            filterConfig={
              Object {
                "config": Object {
                  "options": Array [
                  Object {
                    "key": "hatsAndHeadwear",
                    "label": "Hats & Headwear",
                  },
                  Object {
                    "key": "jacketsAndSportswear",
                    "label": "Jackets & Sportswear",
                  },
                  Object {
                    "key": "shirts",
                    "label": "Shirts",
                  },
                  Object {
                    "key": "sweatsAndCasual",
                    "label": "Sweats & Casual",
                  },
                  Object {
                    "key": "sweatshirts",
                    "label": "Sweatshirts",
                  },
                  Object {
                    "key": "accessories",
                    "label": "Accessories",
                  },
                ],
                  "schemaType": "enum",
                },
                "group": "primary",
                "id": "category",
                "label": "Category",
                "queryParamNames": Array [
                  "pub_category",
                ],
                "type": "SelectMultipleFilter",
              }
            }
            getHandleChangedValueFn={[Function]}
            idPrefix="SearchFiltersMobile"
            initialValues={[Function]}
            key="SearchFiltersMobile.category"
            liveEdit={true}
            showAsPopup={false}
            urlQueryParams={Object {}}
          />
          <FilterComponent
            className="filter"
            filterConfig={
              Object {
                "config": Object {
                  "options": Array [
                    Object {
                      "key": "true",
                      "label": "True",
                    },
                    Object {
                      "key": "false",
                      "label": "False",
                    },
                  ],
                  "schemaType": "enum",
                },
                "group": "primary",
                "id": "madetoorder",
                "label": "Made to Order",
                "queryParamNames": Array [
                  "pub_madetoorder",
                ],
                "type": "SelectMultipleFilter",
              }
            }
            getHandleChangedValueFn={[Function]}
            idPrefix="SearchFiltersMobile"
            initialValues={[Function]}
            isDesktop={true}
            key="SearchFiltersMobile.madetoorder"
            liveEdit={true}
            showAsPopup={false}
            urlQueryParams={Object {}}
          />
          <FilterComponent
            filterConfig={
              Object {
                "config": Object {
                  "options": Array [
                    Object {
                      "key": "extraSmall",
                      "label": "XS",
                    },
                    Object {
                      "key": "small",
                      "label": "S",
                    },
                    Object {
                      "key": "medium",
                      "label": "M",
                    },
                    Object {
                      "key": "large",
                      "label": "L",
                    },
                    Object {
                      "key": "extraLarge",
                      "label": "XL",
                    },
                    Object {
                      "key": "doubleExtraLarge",
                      "label": "XXL",
                    },
                    Object {
                      "key": "oneSize",
                      "label": "One size",
                    },
                  ],
                  "schemaType": "enum",
                },
                "group": "primary",
                "id": "size",
                "label": "Size",
                "queryParamNames": Array [
                  "pub_size",
                ],
                "type": "SelectMultipleFilter",
              }
            }
            getHandleChangedValueFn={[Function]}
            idPrefix="SearchFiltersMobile"
            initialValues={[Function]}
            key="SearchFiltersMobile.size"
            liveEdit={true}
            showAsPopup={false}
            urlQueryParams={Object {}}
          />
          <FilterComponent
            filterConfig={
              Object {
                "config": Object {
                  "options": Array [
                  Object {
                    "key": "black",
                    "label": "Black",
                  },
                  Object {
                    "key": "blue",
                    "label": "Blue",
                  },
                  Object {
                    "key": "brown",
                    "label": "Brown",
                  },
                  Object {
                    "key": "clear",
                    "label": "Clear",
                  },
                  Object {
                    "key": "gold",
                    "label": "Gold",
                  },
                  Object {
                    "key": "gray",
                    "label": "Gray",
                  },
                  Object {
                    "key": "green",
                    "label": "Green",
                  },
                  Object {
                    "key": "orange",
                    "label": "Orange",
                  },
                  Object {
                    "key": "pink",
                    "label": "Pink",
                  },
                  Object {
                    "key": "purple",
                    "label": "Purple",
                  },
                  Object {
                    "key": "rainbow",
                    "label": "Rainbow",
                  },
                  Object {
                    "key": "red",
                    "label": "Red",
                  },
                  Object {
                    "key": "silver",
                    "label": "Silver",
                  },
                  Object {
                    "key": "tan",
                    "label": "Tan",
                  },
                  Object {
                    "key": "white",
                    "label": "White",
                  },
                  Object {
                    "key": "yellow",
                    "label": "Yellow",
                  },
                ],
                  "schemaType": "enum",
                },
                "group": "primary",
                "id": "color",
                "label": "Color",
                "queryParamNames": Array [
                  "pub_color",
                ],
                "type": "SelectMultipleFilter",
              }
            }
            getHandleChangedValueFn={[Function]}
            idPrefix="SearchFiltersMobile"
            initialValues={[Function]}
            key="SearchFiltersMobile.color"
            liveEdit={true}
            showAsPopup={false}
            urlQueryParams={Object {}}
          />
        <FilterComponent
          className="filter"
          filterConfig={
            Object {
              "config": Object {
                "options": Array [
                  Object {
                    "key": "new",
                    "label": "New",
                  },
                  Object {
                    "key": "good",
                    "label": "Good",
                  },
                  Object {
                    "key": "fair",
                    "label": "Fair",
                  },
                ],
                "schemaType": "enum",
              },
              "group": "primary",
              "id": "condition",
              "label": "Condition",
              "queryParamNames": Array [
                "pub_condition",
              ],
              "type": "SelectMultipleFilter",
            }
          }
          getHandleChangedValueFn={[Function]}
          idPrefix="SearchFiltersMobile"
          initialValues={[Function]}
          isDesktop={true}
          key="SearchFiltersMobile.condition"
          liveEdit={true}
          showAsPopup={false}
          urlQueryParams={Object {}}
        />

          <FilterComponent
            filterConfig={
              Object {
                "config": Object {
                  "options": Array [
                  Object {
                    "key": "alphaChiOmega",
                    "label": "Alpha Chi Omega",
                  },
                  Object {
                    "key": "alphaDeltaPi",
                    "label": "Alpha Delta Pi",
                  },
                  Object {
                    "key": "alphaEpsilonPhi",
                    "label": "Alpha Epsilon Phi",
                  },
                  Object {
                    "key": "alphaGammaDelta",
                    "label": "Alpha Gamma Delta",
                  },
                  Object {
                    "key": "alphaOmicronPi",
                    "label": "Alpha Omicron Pi",
                  },
                  Object {
                    "key": "alphaPhi",
                    "label": "Alpha Phi",
                  },
                  Object {
                    "key": "alphaSigmaAlpha",
                    "label": "Alpha Sigma Alpha",
                  },
                  Object {
                    "key": "alphaSigmaTau",
                    "label": "Alpha Sigma Tau",
                  },
                  Object {
                    "key": "alphaXiDelta",
                    "label": "Alpha Xi Delta",
                  },
                  Object {
                    "key": "chiOmega",
                    "label": "Chi Omega",
                  },
                  Object {
                    "key": "deltaDeltaDelta",
                    "label": "Delta Delta Delta",
                  },
                  Object {
                    "key": "deltaGamma",
                    "label": "Delta Gamma",
                  },
                  Object {
                    "key": "deltaPhiEpsilon",
                    "label": "Delta Phi Epsilon",
                  },
                  Object {
                    "key": "deltaZeta",
                    "label": "Delta Zeta",
                  },
                  Object {
                    "key": "gammaPhiBeta",
                    "label": "Gamma Phi Beta",
                  },
                  Object {
                    "key": "kappaAlphaTheta",
                    "label": "Kappa Alpha Theta",
                  },
                  Object {
                    "key": "kappaDelta",
                    "label": "Kappa Delta",
                  },
                  Object {
                    "key": "kappaKappaGamma",
                    "label": "Kappa Kappa Gamma",
                  },
                  Object {
                    "key": "phiMu",
                    "label": "Phi Mu",
                  },
                  Object {
                    "key": "phiSigmaSigma",
                    "label": "Phi Sigma Sigma",
                  },
                  Object {
                    "key": "piBetaPhi",
                    "label": "Pi Beta Phi",
                  },
                  Object {
                    "key": "sigmaDeltaTau",
                    "label": "Sigma Delta Tau",
                  },
                  Object {
                    "key": "sigmaKappa",
                    "label": "Sigma Kappa",
                  },
                  Object {
                    "key": "sigmaSigmaSigma",
                    "label": "Sigma Sigma Sigma",
                  },
                  Object {
                    "key": "thetaPhiAlpha",
                    "label": "Theta Phi Alpha",
                  },
                  Object {
                    "key": "zetaTauAlpha",
                    "label": "Zeta Tau Alpha",
                  },
                ],
                  "schemaType": "enum",
                },
                "group": "primary",
                "id": "sorority",
                "label": "Sorority",
                "queryParamNames": Array [
                  "pub_sorority",
                ],
                "type": "SelectSingleFilter",
              }
            }
            getHandleChangedValueFn={[Function]}
            idPrefix="SearchFiltersMobile"
            initialValues={[Function]}
            key="SearchFiltersMobile.sorority"
            liveEdit={true}
            showAsPopup={false}
            urlQueryParams={Object {}}
          />
          <FilterComponent
            filterConfig={
              Object {
                "config": Object {
                  "max": 1000,
                  "min": 0,
                  "step": 5,
                },
                "group": "primary",
                "id": "price",
                "label": "Price",
                "queryParamNames": Array [
                  "price",
                ],
                "type": "PriceFilter",
              }
            }
            getHandleChangedValueFn={[Function]}
            idPrefix="SearchFiltersMobile"
            initialValues={[Function]}
            key="SearchFiltersMobile.price"
            liveEdit={true}
            showAsPopup={false}
            urlQueryParams={Object {}}
          />
        </injectIntl(withRouter(SearchFiltersMobileComponent))>
        <MainPanelHeader
          className="mainPanel"
          listingsAreLoaded={true}
          noResultsInfo={null}
          resultsCount={22}
          rootClassName={null}
          searchInProgress={false}
          searchListingsError={null}
          sortByComponent={
            <injectIntl(SortBy)
              className="sortByDesktop"
              contentPlacementOffset={-14}
              hasConflictingFilters={false}
              isConflictingFilterActive={false}
              onSelect={[Function]}
              selectedFilters={Object {}}
              showAsPopup={true}
            />
          }
        />
        <div
          className="listings"
        >
          <SearchResultsPanel
            className="searchListingsPanel"
            isMapVariant={false}
            listings={Array []}
            pagination={
              Object {
                "page": 1,
                "perPage": 12,
                "totalItems": 22,
                "totalPages": 2,
              }
            }
            rootClassName={null}
            search={Object {}}
          />
        </div>
      </div>
    </div>
  </div>
  <injectIntl(Footer) />
</Page>
`;
